#!/bin/bash
#=================================================================================#
#        MagenX e-commerce stack for Magento 2                                    #
#        Copyright (C) 2013-present admin@magenx.com                              #
#        All rights reserved.                                                     #
#=================================================================================#

INSTANCE_LOCAL_IP=$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)

## system installation
apt-get -y install software-properties-common
apt-get update
apt-get -y install ${EXTRA_PACKAGES_DEB}

## create user
useradd -d /home/${BRAND} -s /bin/bash ${BRAND} >/dev/null 2>&1
## create root php user
useradd -M -s /sbin/nologin -d /home/${BRAND} ${PHP_USER} >/dev/null 2>&1
usermod -g ${PHP_USER} ${BRAND}

pip3 install git-remote-codecommit

mkdir -p ${WEB_ROOT_PATH}
chmod 711 /home/${BRAND}
mkdir -p /home/${BRAND}/{.config,.cache,.local,.composer}
chown -R ${BRAND}:${PHP_USER} ${WEB_ROOT_PATH} /home/${BRAND}/{.config,.cache,.local,.composer}
chmod 2770 ${WEB_ROOT_PATH}
setfacl -Rdm u:${BRAND}:rwX,g:${PHP_USER}:r-X,o::- ${WEB_ROOT_PATH}
cd ${WEB_ROOT_PATH}
su ${BRAND} -s /bin/bash -c "git clone -b build codecommit::${AWS_DEFAULT_REGION}://${CODECOMMIT_APP_REPO_NAME} ."
setfacl -Rdm u:${BRAND}:rwX,g:${PHP_USER}:rwX,o::- var generated pub/static pub/media

chmod +x bin/magento

## install nodejs
curl -fsSL https://deb.nodesource.com/setup_15.x | bash -
apt-get -y install nodejs

## install php
add-apt-repository ppa:ondrej/php -y
apt-get update
apt-get -y install composer php-pear php${PHP_VERSION} %{ for PHP_PKG in split(" ", "${PHP_PACKAGES_DEB}") ~} php${PHP_VERSION}-${PHP_PKG} %{ endfor ~}


cat > /etc/sysctl.conf <<END
fs.file-max = 1000000
fs.inotify.max_user_watches = 1000000
vm.swappiness = 5
END

sysctl -q -p

cat > ${PHP_OPCACHE_INI} <<END
zend_extension=opcache.so
opcache.enable = 0
END

cp ${PHP_INI} ${PHP_INI}.BACK
sed -i 's/^\(max_execution_time = \)[0-9]*/\17200/' ${PHP_INI}
sed -i 's/^\(max_input_time = \)[0-9]*/\17200/' ${PHP_INI}
sed -i 's/^\(memory_limit = \)[0-9]*M/\14048M/' ${PHP_INI}
sed -i 's/^\(post_max_size = \)[0-9]*M/\164M/' ${PHP_INI}
sed -i 's/^\(upload_max_filesize = \)[0-9]*M/\164M/' ${PHP_INI}
sed -i 's/expose_php = On/expose_php = Off/' ${PHP_INI}
sed -i 's/;realpath_cache_size =.*/realpath_cache_size = 4096k/' ${PHP_INI}
sed -i 's/;realpath_cache_ttl =.*/realpath_cache_ttl = 86400/' ${PHP_INI}
sed -i 's/short_open_tag = Off/short_open_tag = On/' ${PHP_INI}
sed -i 's/;max_input_vars =.*/max_input_vars = 50000/' ${PHP_INI}
sed -i 's/session.gc_maxlifetime = 1440/session.gc_maxlifetime = 28800/' ${PHP_INI}
sed -i 's/mysql.allow_persistent = On/mysql.allow_persistent = Off/' ${PHP_INI}
sed -i 's/mysqli.allow_persistent = On/mysqli.allow_persistent = Off/' ${PHP_INI}
sed -i "s,.*date.timezone.*,date.timezone = ${TIMEZONE}," ${PHP_INI}

hostnamectl set-hostname server.${DOMAIN} --static

timedatectl set-timezone ${TIMEZONE}

cd /usr/local/src
wget https://s3.amazonaws.com/amazoncloudwatch-agent/ubuntu/arm64/latest/amazon-cloudwatch-agent.deb
dpkg -i -E ./amazon-cloudwatch-agent.deb

/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c ssm:amazon-cloudwatch-agent-${INSTANCE_NAME}.json
